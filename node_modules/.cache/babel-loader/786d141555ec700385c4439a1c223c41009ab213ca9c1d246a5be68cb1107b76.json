{"ast":null,"code":"var _jsxFileName = \"/Users/graciafourie/Downloads/card-deck-react/src/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from 'axios';\n//import \"./Deck.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://deckofcardsapi.com/api/deck\";\nfunction Deck() {\n  _s();\n  const [deck, setDeck] = useState(null);\n  const [drawn, setDrawn] = useState([]);\n  const [isShuffling, setIsShuffling] = useState(false);\n  useEffect(function loadDeck() {\n    async function fetchData() {\n      const d = await axios.get(\"\".concat(BASE_URL, \"/new/shuffle/\"));\n      setDeck(d.data);\n    }\n    fetchData();\n  }, []);\n\n  //Draw a card: change the state and effect\n  async function draw() {\n    try {\n      const drawRes = await axios.get(\"\".concat(BASE_URL, \"/\").concat(deck.deck_id, \"/draw\"));\n      if (drawRes.data.remaining === 0) throw new Error(\"Deck empty!\");\n      const card = drawRes.data.cards[0];\n      setDrawn(d => [...d, {\n        id: card.code,\n        name: card.suit + \" \" + card.value,\n        image: card.image\n      }]);\n    } catch (err) {\n      alert(err);\n    }\n  }\n  // Shuffle the cards\n  function sat() {}\n\n  // Return draw button (disabled if shuffling).\n  function renderDrawBtn() {\n    if (!deck) return null;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Deck-draw\",\n      onClick: draw,\n      disabled: isShuffling,\n      children: \"DRAW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n  //Return shuffle button\n  function renderShuffleBtn() {\n    if (!deck) return null;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Deck-draw\",\n      onClick: startShuffling,\n      disabled: isShuffling,\n      children: \"SHUFFLE DECK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Deck\",\n    children: [renderDrawBtn(), renderShuffleBtn(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Deck-cardarea\",\n      children: [\" \", drawn.map(c => /*#__PURE__*/_jsxDEV(Card, {\n        name: c.name,\n        image: c.image\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Deck, \"rJFNjGw4xcuVBrPVYhrDVDJI900=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useState","useEffect","Card","axios","jsxDEV","_jsxDEV","BASE_URL","Deck","_s","deck","setDeck","drawn","setDrawn","isShuffling","setIsShuffling","loadDeck","fetchData","d","get","concat","data","draw","drawRes","deck_id","remaining","Error","card","cards","id","code","name","suit","value","image","err","alert","sat","renderDrawBtn","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","renderShuffleBtn","startShuffling","map","c","_c","$RefreshReg$"],"sources":["/Users/graciafourie/Downloads/card-deck-react/src/Deck.js"],"sourcesContent":["import React, { useState, useEffect, } from \"react\";\nimport Card from \"./Card\";\nimport axios from 'axios';\n//import \"./Deck.css\";\n\nconst BASE_URL = \"https://deckofcardsapi.com/api/deck\";\n\n\nfunction Deck() {\n    const [deck, setDeck] = useState(null);\n    const [drawn, setDrawn] = useState([]);\n    const [isShuffling, setIsShuffling] = useState(false);\n\n    useEffect(function loadDeck() {\n        async function fetchData() {\n            const d = await axios.get(`${BASE_URL}/new/shuffle/`);\n            setDeck(d.data);\n        }\n        fetchData();\n    }, []);\n\n    //Draw a card: change the state and effect\n    async function draw() {\n        try {\n            const drawRes = await axios.get(`${BASE_URL}/${deck.deck_id}/draw`);\n\n            if (drawRes.data.remaining === 0) throw new Error(\"Deck empty!\")\n\n            const card = drawRes.data.cards[0];\n\n            setDrawn(d => [\n                ...d,\n                {\n                    id: card.code,\n                    name: card.suit + \" \" + card.value,\n                    image: card.image,\n                },\n            ]);\n        } catch (err) {\n            alert (err);\n        }\n    }\n// Shuffle the cards\nfunction sat() {\n\n}\n\n// Return draw button (disabled if shuffling).\nfunction renderDrawBtn() {\n    if (!deck) return null;\n    return (\n        <button \n            className=\"Deck-draw\"\n            onClick={draw}\n            disabled={isShuffling}>\n                DRAW\n            </button>\n    );\n}\n\n\n//Return shuffle button\nfunction renderShuffleBtn() {\n    if (!deck) return null;\n    return (\n        <button \n            className=\"Deck-draw\"\n            onClick={startShuffling}\n            disabled={isShuffling}>\n            SHUFFLE DECK\n            </button>\n    );\n}\n\nreturn (\n    <main className=\"Deck\">\n\n        {renderDrawBtn()}\n        {renderShuffleBtn()}\n\n        <div className=\"Deck-cardarea\"> {\n            drawn.map(c => (\n                <Card key={c.id} name={c.name} image={c.image} />\n            ))}\n        </div>\n    </main>\n);\n}\n\nexport default Deck;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}